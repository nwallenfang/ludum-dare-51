[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform float progress : hint_range(0.0, 1.0);

float clamp_and_map(float value, float istart, float istop, float ostart, float ostop) {
    value = clamp(value, istart, istop);
    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
}

void fragment() {
	ALBEDO = mix(albedo.rgb, vec3(1.0), pow(clamp_and_map(abs(UV.y-.5), 0.0, .05, .5, 0.0), 3.0));
	ALPHA = pow(clamp_and_map(abs(UV.y-.5) + .008*sin(UV.x*16.1 + TIME * 28.0), 0.05, .18, 1.0, 0.0), 3.0) * pow(albedo.a, 2.0);
	EMISSION = ALBEDO * (ALPHA + 10.0* clamp_and_map(abs(UV.y-.5), 0.01, .05, 1.0, 0.0));
	ALPHA = mix(ALPHA, 0.0, clamp_and_map(UV.x, progress, progress + .4, 1.0, .0));
}
"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 0.219608, 0.219608, 1 )
shader_param/progress = 0.0
