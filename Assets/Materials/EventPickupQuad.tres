[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://Assets/Sprites/banana.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded,depth_test_disable;
uniform vec4 albedo1 : hint_color;
uniform vec4 albedo2 : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float alpha_scissor_threshold;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(CAMERA_MATRIX[0],CAMERA_MATRIX[1],CAMERA_MATRIX[2],WORLD_MATRIX[3]);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = mix(albedo1.rgb, albedo2.rgb, 0.5) * albedo_tex.rgb;
	ALPHA = albedo_tex.a;
	ALPHA_SCISSOR=alpha_scissor_threshold;
}
"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/albedo1 = Color( 0.913725, 0.752941, 0.12549, 1 )
shader_param/albedo2 = Color( 0.866667, 0.258824, 0.137255, 1 )
shader_param/alpha_scissor_threshold = 0.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 1 )
